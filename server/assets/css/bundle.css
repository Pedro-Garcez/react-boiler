html {
  font-family: 'Archive', sans-serif;
  background-color: #fcfcfc;
  color: #e6dbdc;
}

body {
  margin: 0;
}

a {
  text-decoration: none;
  /* no underline */
}

@font-face {
  font-family: "archive";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/archive.eot");
  src: url("/fonts/archive.woff2") format("woff2"),
		url("/fonts/archive.woff") format("woff"),
		url("/fonts/archive.ttf") format("truetype");
}

.layout {
  background-color: #272527;
  max-width: 100rem;
  margin: auto;
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.header {
  border-bottom: 1px solid #d22730;
  display: table;
  text-align: center;
  width: 100%;
}

.header__logo-text {
  font-size: 5rem;
  vertical-align: middle;
  display: table-cell;
}

.header__logo-emphasis {
  color: #d22730;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYWRkeS9jb2RlL3JlYWN0LWJvaWxlci9mcm9udC9zcmMvY29tcG9uZW50cy9idW5kbGUuY3NzIiwic291cmNlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQzs7O0FBR0Q7RUFDRTtBQUF1Qjs7O0FBR3pCO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7Ozs7QUFNRDtFQUNDO0VBQ0E7RUFDQTs7O0FBSUQ7Ozs7O0FBS0E7QUFFQzs7O0FBU0E7OztBQVdBOzs7QUFPQTs7O0FBT0E7Ozs7O0FBU0Q7Ozs7O0FBWUE7RUFDSTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0o7RUFDSTtFQUNBO0VBQ0E7OztBQUdKO0VBQ0k7OztBQUdKOzs7OztBQUtDO0VBQ0M7RUFDQTtFQUNEOzs7QUFHQTtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNEOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQ2pDRCIsInNvdXJjZXNDb250ZW50IjpbImh0bWwge1xuXHRmb250LWZhbWlseTogJ0FyY2hpdmUnLCBzYW5zLXNlcmlmO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNvbG9yLWdyYXktbGlnaHRlc3QpO1xuXHRjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcbn1cblxuYm9keSB7XG5cdG1hcmdpbjowO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAvKiBubyB1bmRlcmxpbmUgKi9cbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZmFtaWx5OlwiYXJjaGl2ZVwiO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OjMwMDtcblx0c3JjOnVybChcIi9mb250cy9hcmNoaXZlLmVvdFwiKTtcblx0c3JjOnVybChcIi9mb250cy9hcmNoaXZlLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLFxuXHRcdHVybChcIi9mb250cy9hcmNoaXZlLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcblx0XHR1cmwoXCIvZm9udHMvYXJjaGl2ZS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIilcblx0O1xufVxuXG4ubGF5b3V0IHtcblx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZCk7XG5cdG1heC13aWR0aDoxMDByZW07XG5cdG1hcmdpbjogYXV0bztcbn1cblxuXG4vKioqXG4gKiBWYXJpYWJsZXNcbiAqIC1cbiAqL1xuXG46cm9vdCB7XG5cblx0Lypcblx0ICogVGhlbWVcblx0ICovXG5cblx0IC0tYmFja2dyb3VuZDogIzI3MjUyNztcblx0IC0tbWFpbi1jb2xvcjogI2QyMjczMDtcblx0IC0tc2Vjb25kYXJ5LWNvbG9yOiAjZTZkYmRjO1xuXG5cblx0Lypcblx0ICogQ29sb3JzXG5cdCAqL1xuXHQtLWNvbG9yLXdoaXRlOiNmZmZmZmY7XG5cdC0tY29sb3ItZ3JheS1saWdodGVzdDojZmNmY2ZjO1xuXHQtLWNvbG9yLWdyYXktbGlnaHRlcjojZjNmM2YzO1xuXHQtLWNvbG9yLWdyYXktbGlnaHQ6I0UyRTJFMjtcblx0LS1jb2xvci1ncmF5LW1lZGl1bS1saWdodDogI2RkZGRkZDtcblx0LS1jb2xvci1ncmF5LW1lZGl1bTojZWFlYWVhO1xuXHQtLWNvbG9yLWdyYXktZGFyazojNTU1NTU1O1xuXG5cdC8qXG5cdCAqIFRleHRzXG5cdCAqL1xuXHQtLWNvbG9yLXRleHQtZ3JhcGg6ICMzZTNlM2U7XG5cdC0tY29sb3ItdGV4dC1saWdodDojODY4Njg2O1xuXHQtLWNvbG9yLXRleHQtZGFyazojNDE0MTQxO1xuXG5cdC8qXG5cdCAqIEFsZXJ0L1N0YXR1cyBjb2xvcnNcblx0ICovXG5cdC0tY29sb3ItZXJyb3I6I0RCNDczNjtcblx0LS1jb2xvci1zdWNjZXNzOiM1RkEwNTI7XG5cdC0tY29sb3Itd2FybmluZzojREQ3RjMzO1xuXG5cdC8qXG5cdCAqIEVhc2luZ3Ncblx0ICovXG5cdC0tZWFzaW5nLWlvczpjdWJpYy1iZXppZXIoMC4yMywxLDAuMzIsMSk7XG5cdC0tZWFzaW5nLWV4cGFuZDpjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyMCwgMS4yNzUpO1xuXHQtLWVhc2luZy1xdWFkOmN1YmljLWJlemllcigwLjc3MCwgMC4wMDAsIDAuMTc1LCAxLjAwMCk7XG5cbn1cblxuLyoqKlxuICogTWVkaWEgcXVlcmllc1xuICogLVxuICovXG5AY3VzdG9tLW1lZGlhIC0tdGFibGV0IGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCk7XG5AY3VzdG9tLW1lZGlhIC0tdGFibGV0LWxhcmdlIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpO1xuQGN1c3RvbS1tZWRpYSAtLWRlc2t0b3Atc21hbGwgYWxsIGFuZCAobWluLXdpZHRoOjExMDBweCk7XG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC1tZWRpdW0gYWxsIGFuZCAobWluLXdpZHRoOjEyMDBweCk7XG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC1sYXJnZSBhbGwgYW5kIChtaW4td2lkdGg6MTQ0MHB4KTtcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXhsYXJnZSBhbGwgYW5kIChtaW4td2lkdGg6MTcyMHB4KTtcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXh4bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE5MjBweCk7XG5cbi5oZWFkZXIge1xuICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkIHZhcigtLW1haW4tY29sb3IpO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIHdpZHRoOjEwMCU7XG59XG5cbi5oZWFkZXJfX2xvZ28tdGV4dCB7XG4gICAgZm9udC1zaXplOjVyZW07XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBkaXNwbGF5OnRhYmxlLWNlbGw7XG59XG5cbi5oZWFkZXJfX2xvZ28tZW1waGFzaXMge1xuICAgIGNvbG9yOiB2YXIoLS1tYWluLWNvbG9yKTtcbn1cblxuLypcbiAqIFNlYXJjaGJhclxuICogPT09PT09PT09XG4gKi9cblxuIC5zZWFyY2hiYXIge1xuIFx0aGVpZ2h0OjFyZW07XG4gXHR0ZXh0LWFsaWduOmNlbnRlcjtcblx0cGFkZGluZy1ib3R0b206NXJlbTtcbiB9XG5cbiBpbnB1dCB7XG4gXHRvdXRsaW5lOiBub25lO1xuIFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gXHRib3JkZXI6IG5vbmU7XG4gXHRjb2xvcjojRjhGOEZGO1xuIFx0dGV4dC1zaGFkb3c6IDBweCAwcHggMHB4ICNGOEY4RkY7XG4gXHQtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdG9wYWNpdHk6Ljc7XG4gfVxuXG4uc2VhcmNoYmFyX19iYXIge1xuXHRtYXJnaW46YXV0bztcblx0d2lkdGg6MjByZW07XG5cdGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNGOEY4RkY7XG5cdHBhZGRpbmc6LjVyZW07XG5cdGZvbnQtc2l6ZToxLjNyZW07XG59XG4iLCJodG1sIHtcbiAgZm9udC1mYW1pbHk6ICdBcmNoaXZlJywgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbiAgY29sb3I6ICNlNmRiZGM7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIC8qIG5vIHVuZGVybGluZSAqL1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYXJjaGl2ZVwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL2FyY2hpdmUuZW90XCIpO1xuICBzcmM6IHVybChcIi9mb250cy9hcmNoaXZlLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLFxuXHRcdHVybChcIi9mb250cy9hcmNoaXZlLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcblx0XHR1cmwoXCIvZm9udHMvYXJjaGl2ZS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG5cbi5sYXlvdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNTI3O1xuICBtYXgtd2lkdGg6IDEwMHJlbTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4vKioqXG4gKiBWYXJpYWJsZXNcbiAqIC1cbiAqL1xuXG46cm9vdCB7XG4gIC8qXG5cdCAqIFRoZW1lXG5cdCAqL1xuICAvKlxuXHQgKiBDb2xvcnNcblx0ICovXG4gIC8qXG5cdCAqIFRleHRzXG5cdCAqL1xuICAvKlxuXHQgKiBBbGVydC9TdGF0dXMgY29sb3JzXG5cdCAqL1xuICAvKlxuXHQgKiBFYXNpbmdzXG5cdCAqL1xufVxuXG4vKioqXG4gKiBNZWRpYSBxdWVyaWVzXG4gKiAtXG4gKi9cblxuLmhlYWRlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDIyNzMwO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlYWRlcl9fbG9nby10ZXh0IHtcbiAgZm9udC1zaXplOiA1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xufVxuXG4uaGVhZGVyX19sb2dvLWVtcGhhc2lzIHtcbiAgY29sb3I6ICNkMjI3MzA7XG59XG5cbi8qXG4gKiBTZWFyY2hiYXJcbiAqID09PT09PT09PVxuICovXG5cbi5zZWFyY2hiYXIge1xuICBoZWlnaHQ6IDFyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1ib3R0b206IDVyZW07XG59XG5cbmlucHV0IHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNGOEY4RkY7XG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDBweCAjRjhGOEZGO1xuICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IC43O1xufVxuXG4uc2VhcmNoYmFyX19iYXIge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiAyMHJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGOEY4RkY7XG4gIHBhZGRpbmc6IC41cmVtO1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTlWYzJWeWN5OWtZV1JrZVM5amIyUmxMM0psWVdOMExXSnZhV3hsY2k5bWNtOXVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OWlkVzVrYkdVdVkzTnpJaXdpWW5WdVpHeGxMbU56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEZRVU5ETEcxRFFVRkJPMFZCUTBFc01FSkJRVUU3UlVGRFFTeGxRVUZCTzBORFEwRTdPMEZFUlVRN1JVRkRReXhWUVVGQk8wTkRRMEU3TzBGRVJVUTdSVUZEUlN4elFrRkJRVHRGUVVGMVFpeHJRa0ZCUVR0RFEwVjRRanM3UVVSRFJEdEZRVU5ETEhWQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMQ3RDUVVGQk8wVkJRMEU3T3l0RFEwYzRRenREUVVNNVF6czdRVVJGUkR0RlFVTkRMREJDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4aFFVRkJPME5EUTBFN08wRkVSMFE3T3p0SFEwVkhPenRCUkVkSU8wVkJSVU03TzBsRFFVYzdSVVJUU0RzN1NVTk9SenRGUkdsQ1NEczdTVU5rUnp0RlJIRkNTRHM3U1VOc1FrYzdSVVI1UWtnN08wbERkRUpITzBOQlEwZzdPMEZFT0VKRU96czdSME42UWtjN08wRkVjVU5JTzBWQlEwa3NhVU5CUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4WlFVRkJPME5EYkVOSU96dEJSSEZEUkR0RlFVTkpMR2RDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4dlFrRkJRVHREUTJ4RFNEczdRVVJ4UTBRN1JVRkRTU3hsUVVGQk8wTkRiRU5JT3p0QlJIRkRSRHM3TzBkRGFFTkhPenRCUkhGRFJqdEZRVU5ETEdGQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVORUxIRkNRVUZCTzBORGJFTkJPenRCUkhGRFFUdEZRVU5ETEdOQlFVRTdSVUZEUVN3NFFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNhVU5CUVVFN1JVRkRRU3h4UTBGQlFUdEZRVU5FTEZsQlFVRTdRME5zUTBFN08wRkVjVU5FTzBWQlEwTXNZVUZCUVR0RlFVTkJMR0ZCUVVFN1JVRkRRU3hwUTBGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4clFrRkJRVHREUTJ4RFFTSXNJbVpwYkdVaU9pSmlkVzVrYkdVdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYUhSdGJDQjdYRzVjZEdadmJuUXRabUZ0YVd4NU9pQW5RWEpqYUdsMlpTY3NJSE5oYm5NdGMyVnlhV1k3WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNmRtRnlLQzB0WTI5c2IzSXRaM0poZVMxc2FXZG9kR1Z6ZENrN1hHNWNkR052Ykc5eU9pQjJZWElvTFMxelpXTnZibVJoY25rdFkyOXNiM0lwTzF4dWZWeHVYRzVpYjJSNUlIdGNibHgwYldGeVoybHVPakE3WEc1OVhHNWNibUVnZTF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3SUM4cUlHNXZJSFZ1WkdWeWJHbHVaU0FxTDF4dWZWeHVYRzVBWm05dWRDMW1ZV05sSUh0Y2JseDBabTl1ZEMxbVlXMXBiSGs2WENKaGNtTm9hWFpsWENJN1hHNWNkR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmx4MFptOXVkQzEzWldsbmFIUTZNekF3TzF4dVhIUnpjbU02ZFhKc0tGd2lMMlp2Ym5SekwyRnlZMmhwZG1VdVpXOTBYQ0lwTzF4dVhIUnpjbU02ZFhKc0tGd2lMMlp2Ym5SekwyRnlZMmhwZG1VdWQyOW1aakpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1aakpjSWlrc1hHNWNkRngwZFhKc0tGd2lMMlp2Ym5SekwyRnlZMmhwZG1VdWQyOW1abHdpS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTEZ4dVhIUmNkSFZ5YkNoY0lpOW1iMjUwY3k5aGNtTm9hWFpsTG5SMFpsd2lLU0JtYjNKdFlYUW9YQ0owY25WbGRIbHdaVndpS1Z4dVhIUTdYRzU5WEc1Y2JpNXNZWGx2ZFhRZ2UxeHVYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMWlZV05yWjNKdmRXNWtLVHRjYmx4MGJXRjRMWGRwWkhSb09qRXdNSEpsYlR0Y2JseDBiV0Z5WjJsdU9pQmhkWFJ2TzF4dWZWeHVYRzVjYmk4cUtpcGNiaUFxSUZaaGNtbGhZbXhsYzF4dUlDb2dMVnh1SUNvdlhHNWNianB5YjI5MElIdGNibHh1WEhRdktseHVYSFFnS2lCVWFHVnRaVnh1WEhRZ0tpOWNibHh1WEhRZ0xTMWlZV05yWjNKdmRXNWtPaUFqTWpjeU5USTNPMXh1WEhRZ0xTMXRZV2x1TFdOdmJHOXlPaUFqWkRJeU56TXdPMXh1WEhRZ0xTMXpaV052Ym1SaGNua3RZMjlzYjNJNklDTmxObVJpWkdNN1hHNWNibHh1WEhRdktseHVYSFFnS2lCRGIyeHZjbk5jYmx4MElDb3ZYRzVjZEMwdFkyOXNiM0l0ZDJocGRHVTZJMlptWm1abVpqdGNibHgwTFMxamIyeHZjaTFuY21GNUxXeHBaMmgwWlhOME9pTm1ZMlpqWm1NN1hHNWNkQzB0WTI5c2IzSXRaM0poZVMxc2FXZG9kR1Z5T2lObU0yWXpaak03WEc1Y2RDMHRZMjlzYjNJdFozSmhlUzFzYVdkb2REb2pSVEpGTWtVeU8xeHVYSFF0TFdOdmJHOXlMV2R5WVhrdGJXVmthWFZ0TFd4cFoyaDBPaUFqWkdSa1pHUmtPMXh1WEhRdExXTnZiRzl5TFdkeVlYa3RiV1ZrYVhWdE9pTmxZV1ZoWldFN1hHNWNkQzB0WTI5c2IzSXRaM0poZVMxa1lYSnJPaU0xTlRVMU5UVTdYRzVjYmx4MEx5cGNibHgwSUNvZ1ZHVjRkSE5jYmx4MElDb3ZYRzVjZEMwdFkyOXNiM0l0ZEdWNGRDMW5jbUZ3YURvZ0l6TmxNMlV6WlR0Y2JseDBMUzFqYjJ4dmNpMTBaWGgwTFd4cFoyaDBPaU00TmpnMk9EWTdYRzVjZEMwdFkyOXNiM0l0ZEdWNGRDMWtZWEpyT2lNME1UUXhOREU3WEc1Y2JseDBMeXBjYmx4MElDb2dRV3hsY25RdlUzUmhkSFZ6SUdOdmJHOXljMXh1WEhRZ0tpOWNibHgwTFMxamIyeHZjaTFsY25KdmNqb2pSRUkwTnpNMk8xeHVYSFF0TFdOdmJHOXlMWE4xWTJObGMzTTZJelZHUVRBMU1qdGNibHgwTFMxamIyeHZjaTEzWVhKdWFXNW5PaU5FUkRkR016TTdYRzVjYmx4MEx5cGNibHgwSUNvZ1JXRnphVzVuYzF4dVhIUWdLaTljYmx4MExTMWxZWE5wYm1jdGFXOXpPbU4xWW1sakxXSmxlbWxsY2lnd0xqSXpMREVzTUM0ek1pd3hLVHRjYmx4MExTMWxZWE5wYm1jdFpYaHdZVzVrT21OMVltbGpMV0psZW1sbGNpZ3dMakUzTlN3Z01DNDRPRFVzSURBdU16SXdMQ0F4TGpJM05TazdYRzVjZEMwdFpXRnphVzVuTFhGMVlXUTZZM1ZpYVdNdFltVjZhV1Z5S0RBdU56Y3dMQ0F3TGpBd01Dd2dNQzR4TnpVc0lERXVNREF3S1R0Y2JseHVmVnh1WEc0dktpb3FYRzRnS2lCTlpXUnBZU0J4ZFdWeWFXVnpYRzRnS2lBdFhHNGdLaTljYmtCamRYTjBiMjB0YldWa2FXRWdMUzEwWVdKc1pYUWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9Palk0TVhCNEtUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMTBZV0pzWlhRdGJHRnlaMlVnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pFd01qUndlQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0WkdWemEzUnZjQzF6YldGc2JDQmhiR3dnWVc1a0lDaHRhVzR0ZDJsa2RHZzZNVEV3TUhCNEtUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWtaWE5yZEc5d0xXMWxaR2wxYlNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk1USXdNSEI0S1R0Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxa1pYTnJkRzl3TFd4aGNtZGxJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG94TkRRd2NIZ3BPMXh1UUdOMWMzUnZiUzF0WldScFlTQXRMV1JsYzJ0MGIzQXRlR3hoY21kbElHRnNiQ0JoYm1RZ0tHMXBiaTEzYVdSMGFEb3hOekl3Y0hncE8xeHVRR04xYzNSdmJTMXRaV1JwWVNBdExXUmxjMnQwYjNBdGVIaHNZWEpuWlNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk1Ua3lNSEI0S1R0Y2JseHVMbWhsWVdSbGNpQjdYRzRnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG94Y0hnZ2MyOXNhV1FnZG1GeUtDMHRiV0ZwYmkxamIyeHZjaWs3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpwalpXNTBaWEk3WEc0Z0lDQWdkMmxrZEdnNk1UQXdKVHRjYm4xY2JseHVMbWhsWVdSbGNsOWZiRzluYnkxMFpYaDBJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZOWEpsYlR0Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHVJQ0FnSUdScGMzQnNZWGs2ZEdGaWJHVXRZMlZzYkR0Y2JuMWNibHh1TG1obFlXUmxjbDlmYkc5bmJ5MWxiWEJvWVhOcGN5QjdYRzRnSUNBZ1kyOXNiM0k2SUhaaGNpZ3RMVzFoYVc0dFkyOXNiM0lwTzF4dWZWeHVYRzR2S2x4dUlDb2dVMlZoY21Ob1ltRnlYRzRnS2lBOVBUMDlQVDA5UFQxY2JpQXFMMXh1WEc0Z0xuTmxZWEpqYUdKaGNpQjdYRzRnWEhSb1pXbG5hSFE2TVhKbGJUdGNiaUJjZEhSbGVIUXRZV3hwWjI0NlkyVnVkR1Z5TzF4dVhIUndZV1JrYVc1bkxXSnZkSFJ2YlRvMWNtVnRPMXh1SUgxY2JseHVJR2x1Y0hWMElIdGNiaUJjZEc5MWRHeHBibVU2SUc1dmJtVTdYRzRnWEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUJjZEdKdmNtUmxjam9nYm05dVpUdGNiaUJjZEdOdmJHOXlPaU5HT0VZNFJrWTdYRzRnWEhSMFpYaDBMWE5vWVdSdmR6b2dNSEI0SURCd2VDQXdjSGdnSTBZNFJqaEdSanRjYmlCY2RDMTNaV0pyYVhRdGRHVjRkQzFtYVd4c0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHgwYjNCaFkybDBlVG91Tnp0Y2JpQjlYRzVjYmk1elpXRnlZMmhpWVhKZlgySmhjaUI3WEc1Y2RHMWhjbWRwYmpwaGRYUnZPMXh1WEhSM2FXUjBhRG95TUhKbGJUdGNibHgwWW05eVpHVnlMV0p2ZEhSdmJUb3hjSGdnYzI5c2FXUWdJMFk0UmpoR1JqdGNibHgwY0dGa1pHbHVaem91TlhKbGJUdGNibHgwWm05dWRDMXphWHBsT2pFdU0zSmxiVHRjYm4xY2JpSXNJbWgwYld3Z2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0owRnlZMmhwZG1VbkxDQnpZVzV6TFhObGNtbG1PMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptTm1ZMlpqTzF4dUlDQmpiMnh2Y2pvZ0kyVTJaR0prWXp0Y2JuMWNibHh1WW05a2VTQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JuMWNibHh1WVNCN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdMeW9nYm04Z2RXNWtaWEpzYVc1bElDb3ZYRzU5WEc1Y2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0poY21Ob2FYWmxYQ0k3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklETXdNRHRjYmlBZ2MzSmpPaUIxY213b1hDSXZabTl1ZEhNdllYSmphR2wyWlM1bGIzUmNJaWs3WEc0Z0lITnlZem9nZFhKc0tGd2lMMlp2Ym5SekwyRnlZMmhwZG1VdWQyOW1aakpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1aakpjSWlrc1hHNWNkRngwZFhKc0tGd2lMMlp2Ym5SekwyRnlZMmhwZG1VdWQyOW1abHdpS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTEZ4dVhIUmNkSFZ5YkNoY0lpOW1iMjUwY3k5aGNtTm9hWFpsTG5SMFpsd2lLU0JtYjNKdFlYUW9YQ0owY25WbGRIbHdaVndpS1R0Y2JuMWNibHh1TG14aGVXOTFkQ0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXlOekkxTWpjN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRBd2NtVnRPMXh1SUNCdFlYSm5hVzQ2SUdGMWRHODdYRzU5WEc1Y2JpOHFLaXBjYmlBcUlGWmhjbWxoWW14bGMxeHVJQ29nTFZ4dUlDb3ZYRzVjYmpweWIyOTBJSHRjYmlBZ0x5cGNibHgwSUNvZ1ZHaGxiV1ZjYmx4MElDb3ZYRzRnSUM4cVhHNWNkQ0FxSUVOdmJHOXljMXh1WEhRZ0tpOWNiaUFnTHlwY2JseDBJQ29nVkdWNGRITmNibHgwSUNvdlhHNGdJQzhxWEc1Y2RDQXFJRUZzWlhKMEwxTjBZWFIxY3lCamIyeHZjbk5jYmx4MElDb3ZYRzRnSUM4cVhHNWNkQ0FxSUVWaGMybHVaM05jYmx4MElDb3ZYRzU5WEc1Y2JpOHFLaXBjYmlBcUlFMWxaR2xoSUhGMVpYSnBaWE5jYmlBcUlDMWNiaUFxTDF4dVhHNHVhR1ZoWkdWeUlIdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJQ05rTWpJM016QTdYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dWZWeHVYRzR1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRFZ5WlcwN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hHNGdJR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3c3WEc1OVhHNWNiaTVvWldGa1pYSmZYMnh2WjI4dFpXMXdhR0Z6YVhNZ2UxeHVJQ0JqYjJ4dmNqb2dJMlF5TWpjek1EdGNibjFjYmx4dUx5cGNiaUFxSUZObFlYSmphR0poY2x4dUlDb2dQVDA5UFQwOVBUMDlYRzRnS2k5Y2JseHVMbk5sWVhKamFHSmhjaUI3WEc0Z0lHaGxhV2RvZERvZ01YSmxiVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOWEpsYlR0Y2JuMWNibHh1YVc1d2RYUWdlMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJMFk0UmpoR1JqdGNiaUFnZEdWNGRDMXphR0ZrYjNjNklEQndlQ0F3Y0hnZ01IQjRJQ05HT0VZNFJrWTdYRzRnSUMxM1pXSnJhWFF0ZEdWNGRDMW1hV3hzTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdiM0JoWTJsMGVUb2dMamM3WEc1OVhHNWNiaTV6WldGeVkyaGlZWEpmWDJKaGNpQjdYRzRnSUcxaGNtZHBiam9nWVhWMGJ6dGNiaUFnZDJsa2RHZzZJREl3Y21WdE8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdJMFk0UmpoR1JqdGNiaUFnY0dGa1pHbHVaem9nTGpWeVpXMDdYRzRnSUdadmJuUXRjMmw2WlRvZ01TNHpjbVZ0TzF4dWZWeHVMeW9qSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WkdGMFlUcGhjSEJzYVdOaGRHbHZiaTlxYzI5dU8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2xwT1Zaak1sWjVZM2s1YTFsWFVtdGxVemxxWWpKU2JFd3pTbXhaVjA0d1RGZEtkbUZYZUd4amFUbHRZMjA1ZFdSRE9YcGpiVTEyV1RJNWRHTkhPWFZhVnpVd1kzazVhV1JYTld0aVIxVjFXVE5PZWtsc01ITkpiVFZvWWxkV2VrbHFjR0pZVTNkcFlsZEdkMk5IYkhWYU0wMXBUMmxLUWxGVlJrSlBNRlpDVVRCTk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVa1IwUmxGVlRrUlBlbk0zVVZWR1NGSkVkRVpSVlU1R1R6QkdRbEZZVmtOUGVuTTNVVlZHU0dWclNUZFNWVVpFVVhwMFJsRlZUa0pQTUZaQ1VUQkZOMUpWUmtSUlZIUkdVVlZPUWs5NmN6ZFBlblJDVVZVeFJVOHdWa0pSTUUwM1VsVkdSRkZVZEVaUlZVNUNUM3B6TjFGVlJrcFNSSE0zVDNwek4xRlZSa3hSVkhSQ1VWVldSRTk2Y3pkUlZVWlVVVlJ6TjA4d1JrSldNRVUzVDNwMFFsRlZPVUpQZW5NM1VWVkdVRkZVY3pkUGVuTTNVVlZHVkZKRWN6ZFBlbk0zVVZWR1dsRlVkRVpSVlU1S1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBlbk0zVVZWR1NGTnFkRVpSVlU1S1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRzgzVWxWR1JGTlVjemRQTUVaQ1VqQnZOMDk2Y3pkUE1FWkNVekJOTjFKVlJrUlJlblJHVVZWT1FrOHdWa0pSTUZFM1QzcDBRbEZWWkVKUE1GWkNVVEJOTjFKVlJrUlJWSFJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1VUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZOSmMwbHVUblprV0VwcVdsaE9SR0l5TlRCYVZ6VXdTV3B3WWtsdGFEQmlWM2RuWlRGNGRWaElVbTFpTWpVd1RGZGFhR0pYYkhObFZHOW5TakJHZVZreWFIQmtiVlZ1VEVOQ2VsbFhOWHBNV0U1c1kyMXNiVTh4ZUhWWVNGSnBXVmRPY2xvelNuWmtWelZyVEZkT2RtSkhPWGxQYmxwb1kybG5kRXhYVG5aaVJ6bDVURmRrZVZsWWEzUmlSMnh1WVVoU2JHTXpVWEJQTVhoMVdFaFNhbUl5ZUhaamFtOW5aRzFHZVV0RE1IUmpNbFpxWWpJMWExbFlTalZNVjA1MllrYzVlVXRVZEdOaWJqRmpZbXg0ZFZsdE9XdGxVMEkzV0VjMVkyUkhNV2hqYldSd1ltcHZkMDh4ZUhWbVZuaDFXRWMxYUVsSWRHTmlhVUZuWkVkV05HUkRNV3RhVjA1MlkyMUdNR0ZYT1hWUGFVSjFZakkxYkU5NVFYWkxhVUoxWW5sQ01XSnRVbXhqYlhod1ltMVZaMHRwT1dOaWJqRmpZbXg0ZFZGSFduWmlibEYwV20xR2FscFRRamRZUnpWalpFZGFkbUp1VVhSYWJVWjBZVmQ0TlU5c2QybFpXRXBxWVVkc01scFdkMmxQTVhoMVdFaFNiV0l5TlRCTVdFNHdaVmQ0YkU5cFFuVmlNMHAwV1ZkM04xaEhOV05rUjFwMlltNVJkR1F5Vm5CYU1tZ3dUMnBOZDAxRWRHTmliSGd3WXpOS2FrOXVWbmxpUTJoalNXazViV0l5TlRCamVUbG9ZMjFPYjJGWVdteE1iVloyWkVaM2FVdFVkR05pYkhnd1l6Tkthazl1Vm5saVEyaGpTV2s1YldJeU5UQmplVGxvWTIxT2IyRllXbXhNYm1SMldtMVplVmhEU1hCSlIxcDJZMjB4YUdSRGFHTkpibVIyV20xWmVWaERTWEJNUm5oMVdFaFNZMlJJVm5saVEyaGpTV2s1YldJeU5UQmplVGxvWTIxT2IyRllXbXhNYm1SMldtMWFZMGxwYTJkYWJUbDVZbGRHTUV0R2QybGtNamx0V214M2FVdFRlR05pYkhnd1dFaFNNV050ZDI5WVEwbDJXbTA1ZFdSSVRYWlpXRXBxWVVkc01scFROVEJrUjFwalNXbHJaMXB0T1hsaVYwWXdTMFozYVdSSVNqRmFXRkkxWTBkV1kwbHBiR05pYkhnd1R6RjRkV1pXZUhWWVJ6UjFZa2RHTldJelZqQkpTSFJqWW14NE1GbHRSbXBoTW1SNVlqTldkVnBETVdwaU1uaDJZMnB2WjJSdFJubExRekIwV1cxR2FtRXlaSGxpTTFaMVdrTnJOMWhITldOa1J6Rm9aVU14TTJGWFVqQmhSRzk0VFVSQ2VWcFhNRGRZUnpWalpFY3hhR050WkhCaWFtOW5XVmhXTUdKNmRHTmliakZqWW14NGRWaEhOSFpMYVc5eFdFYzBaMHRwUWxkWldFcHdXVmRLYzFwWVRtTmlhVUZ4U1VNeFkySnBRWEZNTVhoMVdFYzBObU50T1haa1EwSTNXRWMxWTJKc2VEQk1lWEJqWW14NE1FbERiMmRXUjJoc1lsZFdZMkpzZURCSlEyOTJXRWMxWTJKc2VEQkpRekIwV1cxR2FtRXlaSGxpTTFaMVdrUnZaMGw2U1ROTmFsVjVUbnAwWTJKc2VEQkpRekIwWWxkR2NHSnBNV3BpTW5oMlkycHZaMGt5VVhsTmFtTjZUVVIwWTJKc2VEQkpRekIwWXpKV2FtSXlOV3RaV0VvMVRGZE9kbUpIT1hsUGFVRnFXbFJhYTFsdFVtcFBNWGgxV0VjMVkySnNlREJNZVhCallteDRNRWxEYjJkUk1qbHpZak5LZWxoSE5XTmtRMEZ4VERGNGRWaElVWFJNVjA1MllrYzVlVXhZWkc5aFdGSnNUMmxPYlZwdFdtMWFiVmszV0VjMVkyUkRNSFJaTWpsellqTkpkRm96U21obFV6RnpZVmRrYjJSSFZucGtSRzlxV20xT2JWa3lXbXBQTVhoMVdFaFJkRXhYVG5aaVJ6bDVURmRrZVZsWWEzUmlSMnh1WVVoU2JHTnFiMnBhYWs1dFRUSlplazh4ZUhWWVNGRjBURmRPZG1KSE9YbE1WMlI1V1ZocmRHSkhiRzVoU0ZFMlNUQlZlVkpVU2taTmFuUmpZbXg0TUV4VE1XcGlNbmgyWTJreGJtTnRSalZNVnpGc1drZHNNV0pUTVhOaFYyUnZaRVJ2WjBreVVtdGFSMUpyV2tSMFkySnNlREJNVXpGcVlqSjRkbU5wTVc1amJVWTFURmN4YkZwSGJERmlWRzlxV2xkR2JGbFhWbWhQTVhoMVdFaFJkRXhYVG5aaVJ6bDVURmRrZVZsWWEzUmFSMFo1WVhwdmFrNVVWVEZPVkZVeFR6RjRkVmhITldOa1F6aHhXRWMxWTJSRFFYRkpSbEpzWlVoU2VsaEhOV05rUTBGeFRERjRkVmhJVVhSTVYwNTJZa2M1ZVV4WVVteGxTRkYwV2pOS2FHTkhaelpKUTAxNldsUk9iRTB5VlRkWVJ6VmpaRU13ZEZreU9YTmlNMGwwWkVkV05HUkRNWE5oVjJSdlpFUnZhazlFV1RST2FtY3lUekY0ZFZoSVVYUk1WMDUyWWtjNWVVeFlVbXhsU0ZGMFdrZEdlV0Y2YjJwT1JFVXdUVlJSZUU4eGVIVllSelZqWkVNNGNWaEhOV05rUTBGeFNVVkdjMXBZU2pCTU1VNHdXVmhTTVdONVFtcGlNbmgyWTI1T1kySnNlREJKUTI5MldFYzFZMlJETUhSWk1qbHpZak5KZEZwWVNubGlNMGsyU1RCU1EwNUVZM3BPYW5SallteDRNRXhUTVdwaU1uaDJZMmt4ZW1SWFRtcGFXRTU2VDJsTk1WSnJSWGRPVkVrM1dFYzFZMlJETUhSWk1qbHpZak5KZEdReVJubGliV3gxV25wdmFsSkZVVE5TYWsxNlR6RjRkVmhITldOa1F6aHhXRWMxWTJSRFFYRkpSVlpvWXpKc2RWb3pUbU5pYkhnd1NVTnZkbGhITldOa1F6QjBXbGRHZW1GWE5XNU1WMngyWTNwd2FtUlhTbkJaZVRGcFdsaHdjRnBZU1c5TlF6UjVUWGwzZUV4RVFYVk5la2x6VFZOck4xaEhOV05rUXpCMFdsZEdlbUZYTlc1TVYxWTBZMGRHZFZwRWNHcGtWMHB3V1hreGFWcFljSEJhV0VsdlRVTTBlRTU2VlhOSlJFRjFUMFJuTVV4RFFYZE1hazE1VFVOM1owMVROSGxPZWxWd1R6RjRkVmhJVVhSTVYxWm9ZekpzZFZwNU1YaGtWMFpyVDIxT01WbHRiR3BNVjBwc1pXMXNiR05wWjNkTWFtTXpUVU4zWjAxRE5IZE5SRUZ6U1VSQmRVMVVZekZNUTBGNFRHcEJkMDFEYXpkWVJ6VmpZbTR4WTJKc2VIVk1lVzl4UzJ4NGRVbERiMmRVVjFacllWZEZaMk5ZVm14amJXeHNZekY0ZFVsRGIyZE1WbmgxU1VOdmRsaEhOVUZaTTFaNlpFYzVkRXhYTVd4YVIyeG9TVU13ZEdSSFJtbGlSMVl3U1VkR2MySkRRbWhpYlZGblMwY3hjR0pwTVROaFYxSXdZVVJ2TWs5RVJuZGxRMnMzV0VjMVFWa3pWbnBrUnpsMFRGY3hiRnBIYkdoSlF6QjBaRWRHYVdKSFZqQk1WM2hvWTIxa2JFbEhSbk5pUTBKb1ltMVJaMHRITVhCaWFURXpZVmRTTUdGRWIzaE5SRWt3WTBobmNFOHhlSFZSUjA0eFl6TlNkbUpUTVhSYVYxSndXVk5CZEV4WFVteGpNblF3WWpOQmRHTXlNV2hpUjNkbldWZDRjMGxIUm5WYVEwRnZZbGRzZFV4WVpIQmFTRkp2VDJwRmVFMUVRbmRsUTJzM1dFYzFRVmt6Vm5wa1J6bDBURmN4YkZwSGJHaEpRekIwV2tkV2VtRXpVblpqUXpGMFdsZFNjR1JYTUdkWlYzaHpTVWRHZFZwRFFXOWlWMngxVEZoa2NGcElVbTlQYWtWNVRVUkNkMlZEYXpkWVJ6VkJXVE5XZW1SSE9YUk1WekZzV2tkc2FFbERNSFJhUjFaNllUTlNkbU5ETVhOWldFcHVXbE5DYUdKSGQyZFpWelZyU1VOb2RHRlhOSFJrTW14clpFZG5OazFVVVRCTlNFSTBTMVIwWTJKclFtcGtXRTR3WWpJd2RHSlhWbXRoVjBWblRGTXhhMXBZVG5Ka1J6bDNURmhvYzFsWVNtNWFVMEpvWWtkM1oxbFhOV3RKUTJoMFlWYzBkR1F5Ykd0a1IyYzJUVlJqZVUxSVFqUkxWSFJqWW10Q2FtUllUakJpTWpCMFlsZFdhMkZYUldkTVV6RnJXbGhPY21SSE9YZE1XR2cwWWtkR2VWb3lWV2RaVjNoelNVZEdkVnBEUVc5aVYyeDFURmhrY0ZwSVVtOVBha1UxVFdwQ2QyVkRhemRZUnpWalltazFiMXBYUm10YVdFbG5aVEY0ZFVsRFFXZEpSMHAyWTIxU2JHTnBNV2xpTTFJd1lqSXdOazFZUWpSSlNFNTJZa2RzYTBsSVdtaGphV2QwVEZjeGFHRlhOSFJaTWpsellqTkpjRTh4ZUhWSlEwRm5TVWRTY0dNelFuTlpXR3MyU1VoU2FGbHRlR3hQTVhoMVNVTkJaMGxJVW14bFNGRjBXVmQ0Y0ZveU5EWlpNbFoxWkVkV2VVOHhlSFZKUTBGblNVaGtjRnBJVW05UGFrVjNUVU5WTjFoSE5UbFlSelZqWW1rMWIxcFhSbXRhV0VwbVdESjRkbG95T0hSa1IxWTBaRU5DTjFoSE5HZEpRMEZuV20wNWRXUkRNWHBoV0hCc1QycFdlVnBYTURkWVJ6Um5TVU5CWjJSdFZubGtSMnhxV1ZkM2RGbFhlSEJhTWpRMlNVY3hjRnBIVW5OYVZIUmpZbWxCWjBsRFFtdGhXRTUzWWtkR05VOXVVbWhaYlhoc1RGZE9iR0pIZHpkWVJ6VTVXRWMxWTJKcE5XOWFWMFpyV2xoS1psZ3llSFphTWpoMFdsY3hkMkZIUm5waFdFMW5aVEY0ZFVsRFFXZEpSMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhkRmxYYkhWTVYwNTJZa2M1ZVV0VWRHTmliakZqWW14NGRVeDVjR05pYVVGeFNVWk9iRmxZU21waFIwcG9ZMng0ZFVsRGIyZFFWREE1VUZRd09WQlVNRGxZUnpSblMyazVZMkpzZUhWSlF6VjZXbGRHZVZreWFHbFpXRWxuWlRGNGRVbEdlREJoUjFad1dqSm9NRTlxUm5sYVZ6QTNXRWMwWjFoSVVqQmFXR2d3VEZkR2MyRlhaSFZQYlU1c1ltNVNiR05xZEdOaWJIZ3dZMGRHYTFwSGJIVmFlVEZwWWpOU01HSXlNRFpPV0Vwc1lsUjBZMkpwUWpsWVJ6VmpZbWxDY0dKdVFqRmtRMEkzV0VjMFoxaElVblprV0ZKellWYzFiRTlwUW5WaU1qVnNUekY0ZFVsR2VEQlpiVVpxWVRKa2VXSXpWblZhUXpGcVlqSjRkbU5xYjJka1NFcG9ZbTVPZDFsWVNteGlibEUzV0VjMFoxaElVbWxpTTBwcldsaEpOa2xITlhaaWJWVTNXRWMwWjFoSVVtcGlNbmgyWTJwdmFsSnFhRWRQUlZwSFR6RjRkVWxHZURCa1IxWTBaRU14ZW1GSFJtdGlNMk0yU1VSQ2QyVkRRWGRqU0dkblRVaENORWxEVGtkUFJWazBVbXRaTjFoSE5HZFlTRkYwWkRKV2FXRXliREJNV0ZKc1pVaFJkRnB0YkhOaVF6RnFZako0ZG1OcWIyZGtTRXBvWW01T2QxbFlTbXhpYmxFM1dFYzFZMlJIT1hkWlYwNXdaRWhyTmt4cVl6ZFlSelJuWmxaNGRWaEhOSFZqTWxab1kyMU9iMWx0Um5sWU1UbHBXVmhKWjJVeGVIVllTRkowV1ZoS2JtRlhORFpaV0ZZd1lucDBZMkpzZURCa01teHJaRWRuTmsxcVFubGFWekEzV0VjMVkyUkhTblpqYlZKc1kya3hhV0l6VWpCaU1qQTJUVmhDTkVsSVRuWmlSMnhyU1VOT1IwOUZXVFJTYTFrM1dFYzFZMlJJUW1oYVIxSndZbTFqTmt4cVZubGFWekEzV0VjMVkyUkhXblppYmxGMFl6SnNObHBVYjNoTWFrNTVXbGN3TjFoSE5UbFlSelJwV0Znd1BTQXFMeUpkZlE9PSAqLyJdfQ== */